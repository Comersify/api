[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "product.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "product.models",
        "description": "product.models",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Discount",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductPackage",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Discount",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Discount",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ExpressionWrapper",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ExpressionWrapper",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "routing",
        "importPath": "chat",
        "description": "chat",
        "isExtraImport": true,
        "detail": "chat",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "InvalidToken",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "user.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "user.models",
        "description": "user.models",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Store",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "ShippingInfo",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Store",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ShoppingCart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "product.serializers",
        "description": "product.serializers",
        "isExtraImport": true,
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "MakeEnvVariables",
        "importPath": "myUtils",
        "description": "myUtils",
        "isExtraImport": true,
        "detail": "myUtils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ads.migrations.0001_initial",
        "description": "ads.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Ads',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('image', models.ImageField(upload_to='uploads/ads')),",
        "detail": "ads.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AdsConfig",
        "kind": 6,
        "importPath": "ads.apps",
        "description": "ads.apps",
        "peekOfCode": "class AdsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'ads'",
        "detail": "ads.apps",
        "documentation": {}
    },
    {
        "label": "Ads",
        "kind": 6,
        "importPath": "ads.models",
        "description": "ads.models",
        "peekOfCode": "class Ads(models.Model):\n    image = models.ImageField(upload_to=\"uploads/ads\")\n    link = models.URLField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    end_date = models.DateTimeField(auto_now=True)",
        "detail": "ads.models",
        "documentation": {}
    },
    {
        "label": "AdsSerializer",
        "kind": 6,
        "importPath": "ads.serializers",
        "description": "ads.serializers",
        "peekOfCode": "class AdsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ads\n        fields = '__all__'",
        "detail": "ads.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ads.urls",
        "description": "ads.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"ads/\", GetAdsView.as_view())\n]",
        "detail": "ads.urls",
        "documentation": {}
    },
    {
        "label": "GetAdsView",
        "kind": 6,
        "importPath": "ads.views",
        "description": "ads.views",
        "peekOfCode": "class GetAdsView(APIView):\n    def get(self, request):\n        query = Ads.objects.all()\n        serializer = AdsSerializer(query, many=True)\n        return Response({\"type\": \"success\", \"data\": serializer.data})",
        "detail": "ads.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0001_initial",
        "description": "cart.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ShippingCart',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('status', models.CharField(choices=[('SUBMITTED', 'SUBMITTED'), ('IN_PROGRESSE', 'IN_PROGRESSE')], default='IN_PROGRESSE', max_length=20)),",
        "detail": "cart.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0002_shippingcart_orders",
        "description": "cart.migrations.0002_shippingcart_orders",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('order', '0001_initial'),\n        ('cart', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='shippingcart',\n            name='orders',",
        "detail": "cart.migrations.0002_shippingcart_orders",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0003_shippingcart_user",
        "description": "cart.migrations.0003_shippingcart_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('cart', '0002_shippingcart_orders'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='shippingcart',\n            name='user',",
        "detail": "cart.migrations.0003_shippingcart_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0004_rename_shippingcart_shoppingcart",
        "description": "cart.migrations.0004_rename_shippingcart_shoppingcart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('order', '0003_order_user'),\n        ('cart', '0003_shippingcart_user'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='ShippingCart',\n            new_name='ShoppingCart',",
        "detail": "cart.migrations.0004_rename_shippingcart_shoppingcart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0005_remove_shoppingcart_status_alter_shoppingcart_orders_and_more",
        "description": "cart.migrations.0005_remove_shoppingcart_status_alter_shoppingcart_orders_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0004_alter_order_user'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('cart', '0004_rename_shippingcart_shoppingcart'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='shoppingcart',\n            name='status',",
        "detail": "cart.migrations.0005_remove_shoppingcart_status_alter_shoppingcart_orders_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0006_alter_shoppingcart_orders_alter_shoppingcart_user",
        "description": "cart.migrations.0006_alter_shoppingcart_orders_alter_shoppingcart_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('order', '0005_order_pack_alter_order_user'),\n        ('cart', '0005_remove_shoppingcart_status_alter_shoppingcart_orders_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='shoppingcart',\n            name='orders',",
        "detail": "cart.migrations.0006_alter_shoppingcart_orders_alter_shoppingcart_user",
        "documentation": {}
    },
    {
        "label": "CartConfig",
        "kind": 6,
        "importPath": "cart.apps",
        "description": "cart.apps",
        "peekOfCode": "class CartConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cart'",
        "detail": "cart.apps",
        "documentation": {}
    },
    {
        "label": "ShoppingCart",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class ShoppingCart(models.Model):\n    user = models.ForeignKey(USER, on_delete=models.SET_NULL, null=True,  limit_choices_to={\n        'user_type': 'CUSTOMER'})\n    orders = models.ManyToManyField(\"order.Order\",  limit_choices_to={\n        'status': 'IN_CART'})",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "USER",
        "kind": 5,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "USER = get_user_model()\nclass ShoppingCart(models.Model):\n    user = models.ForeignKey(USER, on_delete=models.SET_NULL, null=True,  limit_choices_to={\n        'user_type': 'CUSTOMER'})\n    orders = models.ManyToManyField(\"order.Order\",  limit_choices_to={\n        'status': 'IN_CART'})",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "ShoppingCartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class ShoppingCartSerializer:\n    def get_coupons(self, cart):\n        coupons = cart.orders.filter(\n            coupon__isnull=False\n        ).prefetch_related('coupon', 'product').values(\n            'coupon__id', 'coupon__code',\n            'coupon__value', 'product__price'\n        )\n        coupons_total = cart.orders.filter(\n            coupon__isnull=False",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "cart.urls",
        "description": "cart.urls",
        "peekOfCode": "urlpatterns = [  # ver\n    path(\"cart/products/\", GetCartDetailsView.as_view()),\n    path(\"cart/add-product/\", AddProoductToCartView.as_view()),\n    path(\"cart/delete-product/\", DeleteProoductFromCartView.as_view()),\n    path(\"cart/update-product/\", UpdateProoductInCartView.as_view()),\n    path(\"cart/apply-coupon/\", ApplyCouponView.as_view()),\n]",
        "detail": "cart.urls",
        "documentation": {}
    },
    {
        "label": "GetCartDetailsView",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class GetCartDetailsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        serializer = ShoppingCartSerializer()\n        data = serializer.get_data(id=request.user.id)\n        return Response({\"type\": \"success\", \"data\": data})\nclass AddProoductToCartView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "AddProoductToCartView",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class AddProoductToCartView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def create_order(self, user_id, product_id, pack_id):\n        order = Order.objects.create(\n            product_id=product_id,\n            pack_id=pack_id,\n            user_id=user_id,\n        )\n        return order",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "DeleteProoductFromCartView",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class DeleteProoductFromCartView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        order_id = request.data.get(\"order_id\")\n        if not order_id:\n            return Response({\"type\": \"error\", \"message\": \"Data is missing\"})\n        cart = ShoppingCart.objects.filter(user_id=request.user.id)\n        if not cart.exists():\n            return Response({\"type\": \"error\", \"message\": \"Cart doesn't exist\"})",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "UpdateProoductInCartView",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class UpdateProoductInCartView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        order_id = request.data.get(\"order_id\")\n        quantity = request.data.get(\"quantity\")\n        if not order_id or not quantity or quantity <= 0:\n            return Response({\"type\": \"error\", \"message\": \"Data is missing\"})\n        cart = ShoppingCart.objects.filter(user_id=request.user.id)\n        if not cart.exists():",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "ApplyCouponView",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class ApplyCouponView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        code = request.data.get('code')\n        if not code:\n            return Response({\"type\": \"error\", \"message\": \"Data is missing\"})\n        cart = ShoppingCart.objects.filter(user_id=request.user.id)\n        if not cart.exists():\n            return Response({\"type\": \"error\", \"message\": \"Data is missing\"})",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "chat.apps",
        "description": "chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'chat'",
        "detail": "chat.apps",
        "documentation": {}
    },
    {
        "label": "Friends",
        "kind": 6,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "class Friends(models.Model):\n    user    = models.OneToOneRel(User, on_delete=models.CASCADE)\n    friends = models.ManyToManyRel(User)\n    def __str__(self) -> str:\n        return f\"Friends of: {self.user}\" \nclass Messages(models.Model):\n    sender = models.ForeignKey(User, on_delete=models.CASCADE)\n    reciever = models.ForeignKey(User, on_delete=models.CASCADE)\n    message = models.TextField()\n    is_seen = models.BooleanField(default=False)",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Messages",
        "kind": 6,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "class Messages(models.Model):\n    sender = models.ForeignKey(User, on_delete=models.CASCADE)\n    reciever = models.ForeignKey(User, on_delete=models.CASCADE)\n    message = models.TextField()\n    is_seen = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True, auto_now=True)",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "User = get_user_model()\nclass Friends(models.Model):\n    user    = models.OneToOneRel(User, on_delete=models.CASCADE)\n    friends = models.ManyToManyRel(User)\n    def __str__(self) -> str:\n        return f\"Friends of: {self.user}\" \nclass Messages(models.Model):\n    sender = models.ForeignKey(User, on_delete=models.CASCADE)\n    reciever = models.ForeignKey(User, on_delete=models.CASCADE)\n    message = models.TextField()",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "chat.routing",
        "description": "chat.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    path('ws/chat/', consumers.ChatConsumer.as_asgi()),\n]",
        "detail": "chat.routing",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    'http': get_asgi_application(),\n    'websocket': URLRouter(\n        routing.websocket_urlpatterns\n    ),\n})\n\"\"\"\nimport os\nfrom django.core.asgi import get_asgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "kind": 6,
        "importPath": "core.backend",
        "description": "core.backend",
        "peekOfCode": "class AccessTokenBackend(JWTAuthentication):\n    def authenticate(self, request):\n        try:\n            token = request.headers['Authorization']\n            decoded_token = self.get_validated_token(token)\n            user = User.objects.filter(id=decoded_token['user_id']).get()\n            request.user = user\n        except InvalidToken:\n            return None\n        return (user, token)",
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "core.backend",
        "description": "core.backend",
        "peekOfCode": "User = get_user_model()\nclass AccessTokenBackend(JWTAuthentication):\n    def authenticate(self, request):\n        try:\n            token = request.headers['Authorization']\n            decoded_token = self.get_validated_token(token)\n            user = User.objects.filter(id=decoded_token['user_id']).get()\n            request.user = user\n        except InvalidToken:\n            return None",
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "TokenToUserMiddleware",
        "kind": 6,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "class TokenToUserMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        # Check if the authorization header is present\n        if 'Authorization' in request.headers:\n            # Use JWTAuthentication to authenticate the token\n            AccessTokenBackend().authenticate(request)\n        try:\n            if request.body:",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "User = get_user_model()\nclass TokenToUserMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        # Check if the authorization header is present\n        if 'Authorization' in request.headers:\n            # Use JWTAuthentication to authenticate the token\n            AccessTokenBackend().authenticate(request)\n        try:",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = os.environ.get(\"SECRET_KEY\")\nif os.environ.get(\"ENV\") == \"DEV\":\n    DEBUG = True\nelif os.environ.get(\"ENV\") == \"PROD\":\n    DEBUG = False\nALLOWED_HOSTS = [\"*\"]\nAUTH_USER_MODEL = 'user.CustomUser'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"SECRET_KEY\")\nif os.environ.get(\"ENV\") == \"DEV\":\n    DEBUG = True\nelif os.environ.get(\"ENV\") == \"PROD\":\n    DEBUG = False\nALLOWED_HOSTS = [\"*\"]\nAUTH_USER_MODEL = 'user.CustomUser'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nAUTH_USER_MODEL = 'user.CustomUser'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'user.CustomUser'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework_simplejwt',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework_simplejwt',\n    'corsheaders',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework_simplejwt',\n    'corsheaders',\n    'tracking',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ADMIN_REACT_SITE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ADMIN_REACT_SITE = os.environ.get(\"ADMIN_REACT_SITE\")\nSTORE_NEXT_SITE = os.environ.get(\"STORE_NEXT_SITE\")\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    # ADMIN\n    \"https://admin-dashboard-pi-woad.vercel.app\",\n    \"https://master--steady-kangaroo-bebaba.netlify.app\",\n    # Store\n    \"https://boisterous-clafoutis-4deb4d.netlify.app\",\n    \"https://next-js-ecommerce-alpha.vercel.app\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STORE_NEXT_SITE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STORE_NEXT_SITE = os.environ.get(\"STORE_NEXT_SITE\")\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    # ADMIN\n    \"https://admin-dashboard-pi-woad.vercel.app\",\n    \"https://master--steady-kangaroo-bebaba.netlify.app\",\n    # Store\n    \"https://boisterous-clafoutis-4deb4d.netlify.app\",\n    \"https://next-js-ecommerce-alpha.vercel.app\",\n    ADMIN_REACT_SITE,",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    # ADMIN\n    \"https://admin-dashboard-pi-woad.vercel.app\",\n    \"https://master--steady-kangaroo-bebaba.netlify.app\",\n    # Store\n    \"https://boisterous-clafoutis-4deb4d.netlify.app\",\n    \"https://next-js-ecommerce-alpha.vercel.app\",\n    ADMIN_REACT_SITE,\n    STORE_NEXT_SITE,",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    # ADMIN\n    \"https://admin-dashboard-pi-woad.vercel.app\",\n    \"https://master--steady-kangaroo-bebaba.netlify.app\",\n    # Store\n    \"https://boisterous-clafoutis-4deb4d.netlify.app\",\n    \"https://next-js-ecommerce-alpha.vercel.app\",\n    ADMIN_REACT_SITE,\n    STORE_NEXT_SITE,\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\n    # ADMIN\n    \"https://admin-dashboard-pi-woad.vercel.app\",\n    \"https://master--steady-kangaroo-bebaba.netlify.app\",\n    ###########\n    # STORE\n    \"https://boisterous-clafoutis-4deb4d.netlify.app\",\n    \"https://next-js-ecommerce-alpha.vercel.app\",\n    ###########\n    ADMIN_REACT_SITE,",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATICFILES_STORAGE = \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nROOT_URLCONF = 'core.urls'\nDEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nDEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\nDATABASES = {}\nif DEBUG:\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': BASE_DIR / 'db.sqlite3',\n        }\n    }\nelse:",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {}\nif DEBUG:\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': BASE_DIR / 'db.sqlite3',\n        }\n    }\nelse:\n    DATABASES = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'TOKEN_EXPIRED_AFTER': 3600  # Expiry time in seconds (1 hour)\n}\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.getenv('EMAIL_SERVER')\nEMAIL_HOST_USER = os.getenv('EMAIL_USERNAME')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')\nEMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.getenv('EMAIL_SERVER')\nEMAIL_HOST_USER = os.getenv('EMAIL_USERNAME')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')\nEMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST = os.getenv('EMAIL_SERVER')\nEMAIL_HOST_USER = os.getenv('EMAIL_USERNAME')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')\nEMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST_USER = os.getenv('EMAIL_USERNAME')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')\nEMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')\nEMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_PORT = os.getenv('EMAIL_PORT')\nEMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nSIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    # Expiry time for refresh token (30 days)\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path(\"\", include(\"product.urls\")),\n    path(\"\", include(\"order.urls\")),\n    path(\"\", include(\"cart.urls\")),\n    path(\"\", include(\"wishlist.urls\")),\n    path(\"\", include(\"user.urls\")),\n    path(\"\", include(\"ads.urls\")),\n    # path(\"tracking/\", include(\"tracking.urls\")),\n] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "create_user",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_user():\n    type_ = [\"CUSTOMER\", \"VENDOR\"]\n    x = 0\n    with open('./faker/userdata.json') as f:\n        data = json.load(f)\n        for line in data:\n            user = User.objects.create(\n                user_type=type_[x],\n                username=line[\"email\"].split(\"@\")[0],\n                first_name=line[\"first_name\"],",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_store",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_store():\n    users = User.objects.filter(user_type='VENDOR')\n    with open('./faker/store.json') as f:\n        data = json.load(f)\n        x = 1\n        for line in data:\n            s = Store.objects.create(\n                user=users[x],\n                name=line[\"name\"],\n                description=line[\"description\"],",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_cat",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_cat():\n    with open('./faker/category.json') as f:\n        data = json.load(f)\n        x = 0\n        for line in data:\n            if x < 20:\n                s = Category.objects.create(\n                    name=line['category']\n                )\n            if x >= 20:",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_product",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_product():\n    users = Store.objects.all()\n    cats = Category.objects.filter(parent__isnull=False)\n    with open('./faker/product.json') as f:\n        data = json.load(f)\n        for line in data:\n            cat = randint(0, len(cats)-1)\n            user = randint(0, len(users)-1)\n            p = Product.objects.create(\n                store=users[user],",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_dis",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_dis():\n    pr = Product.objects.all()\n    print(len(pr))\n    with open('./faker/discount.json') as f:\n        data = json.load(f)\n        for line in data:\n            x = randint(0, len(pr)-1)\n            print(x)\n            d = Discount.objects.create(\n                title=line[\"title\"],",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_images",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_images():\n    import os\n    images = os.listdir('./media/uploads/images')\n    t = ['X', 'L', 'M', 'S', 'XL']\n    for y in t:\n        for p in Product.objects.all():\n            x = randint(0, len(images) - 1)\n            i = ProductPackage.objects.create(\n                image=f\"/uploads/images/{images[x]}\",\n                product=p,",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "create_coupon",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def create_coupon():\n    pr = Product.objects.all()\n    print(len(pr))\n    with open('./faker/coupon.json') as f:\n        data = json.load(f)\n        for i, line in enumerate(data):\n            a = Coupon.objects.create(\n                product=pr[i],\n                code=line['code'],\n                value=line['percentage'],",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "get",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def get(id):\n    c = Coupon.objects.filter(product_id=id).get()\n    return c.code\ndef set_cats():\n    cats = Category.objects.all()\n    x = 0\n    for p in Product.objects.all():\n        p.category_id = cats[x].id\n        p.save()\n        print(f\"{x} => {len(cats)} : {len(cats) == x}\")",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "set_cats",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def set_cats():\n    cats = Category.objects.all()\n    x = 0\n    for p in Product.objects.all():\n        p.category_id = cats[x].id\n        p.save()\n        print(f\"{x} => {len(cats)} : {len(cats) == x}\")\n        if len(cats) == x + 1:\n            x = 0\n        else:",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "fix_images",
        "kind": 2,
        "importPath": "faker.script",
        "description": "faker.script",
        "peekOfCode": "def fix_images():\n    import os\n    images_users = os.listdir('./media/test-users')\n    images_products = os.listdir('./media/test-images')\n    from django.core.files import File\n    for p in Product.objects.all():\n        i = randint(0, len(images_products)-1)\n        ims = randint(1, 4)\n        for m in range(ims):\n            with open(f\"./media/test-images/{images_products[i]}\", \"rb\") as f:",
        "detail": "faker.script",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0001_initial",
        "description": "order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('quantity', models.PositiveIntegerField()),",
        "detail": "order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0002_order_product",
        "description": "order.migrations.0002_order_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('order', '0001_initial'),\n        ('product', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='product',",
        "detail": "order.migrations.0002_order_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0003_order_user",
        "description": "order.migrations.0003_order_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('order', '0002_order_product'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='user',",
        "detail": "order.migrations.0003_order_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0004_alter_order_user",
        "description": "order.migrations.0004_alter_order_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('order', '0003_order_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='user',\n            field=models.ForeignKey(limit_choices_to={'user__user_type': 'CUSTOMER'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "order.migrations.0004_alter_order_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0005_order_pack_alter_order_user",
        "description": "order.migrations.0005_order_pack_alter_order_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0014_alter_review_user'),\n        ('order', '0004_alter_order_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='pack',",
        "detail": "order.migrations.0005_order_pack_alter_order_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0006_order_coupon",
        "description": "order.migrations.0006_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0014_alter_review_user'),\n        ('order', '0005_order_pack_alter_order_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('end_date__gt', datetime.date(2023, 6, 4)), ('product', models.F('product'))), null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0006_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0007_order_created_at_alter_order_coupon",
        "description": "order.migrations.0007_order_created_at_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0014_alter_review_user'),\n        ('order', '0006_order_coupon'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='created_at',\n            field=models.DateTimeField(auto_created=True, auto_now_add=True, default=datetime.datetime(2023, 6, 5, 11, 30, 50, 956597, tzinfo=datetime.timezone.utc)),",
        "detail": "order.migrations.0007_order_created_at_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0008_order_price",
        "description": "order.migrations.0008_order_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0007_order_created_at_alter_order_coupon'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='price',\n            field=models.FloatField(default=30.2),\n            preserve_default=False,",
        "detail": "order.migrations.0008_order_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0009_alter_order_quantity",
        "description": "order.migrations.0009_alter_order_quantity",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0008_order_price'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='quantity',\n            field=models.PositiveIntegerField(default=1),\n        ),",
        "detail": "order.migrations.0009_alter_order_quantity",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0010_alter_order_pack_alter_order_user",
        "description": "order.migrations.0010_alter_order_pack_alter_order_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0014_alter_review_user'),\n        ('order', '0009_alter_order_quantity'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='pack',",
        "detail": "order.migrations.0010_alter_order_pack_alter_order_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0011_alter_order_price",
        "description": "order.migrations.0011_alter_order_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0010_alter_order_pack_alter_order_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='price',\n            field=models.FloatField(blank=True, null=True),\n        ),",
        "detail": "order.migrations.0011_alter_order_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0012_alter_order_coupon",
        "description": "order.migrations.0012_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0014_alter_review_user'),\n        ('order', '0011_alter_order_price'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('end_date__lt', datetime.date(2023, 6, 5)), ('product', models.F('product'))), null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0012_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0013_alter_order_coupon_alter_order_pack",
        "description": "order.migrations.0013_alter_order_coupon_alter_order_pack",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0014_alter_review_user'),\n        ('order', '0012_alter_order_coupon'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to={'end_date__lt': datetime.date(2023, 6, 5), 'product': models.F('product')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0013_alter_order_coupon_alter_order_pack",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0014_alter_order_coupon",
        "description": "order.migrations.0014_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0017_remove_coupon_percentage_coupon_value_and_more'),\n        ('order', '0013_alter_order_coupon_alter_order_pack'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to={'end_date__lt': datetime.date(2023, 6, 6), 'product': models.F('product')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0014_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0015_order_shippping_info",
        "description": "order.migrations.0015_order_shippping_info",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0013_shippinginfo_phone_number'),\n        ('order', '0014_alter_order_coupon'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='shippping_info',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.shippinginfo'),",
        "detail": "order.migrations.0015_order_shippping_info",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0016_rename_shippping_info_order_shipping_info",
        "description": "order.migrations.0016_rename_shippping_info_order_shipping_info",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0015_order_shippping_info'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='order',\n            old_name='shippping_info',\n            new_name='shipping_info',\n        ),",
        "detail": "order.migrations.0016_rename_shippping_info_order_shipping_info",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0017_alter_order_created_at",
        "description": "order.migrations.0017_alter_order_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0016_rename_shippping_info_order_shipping_info'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='created_at',\n            field=models.DateTimeField(blank=True, null=True),\n        ),",
        "detail": "order.migrations.0017_alter_order_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0018_alter_order_coupon",
        "description": "order.migrations.0018_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0018_rename_categoryid_product_category'),\n        ('order', '0017_alter_order_created_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to={'end_date__lt': datetime.date(2023, 6, 7), 'product': models.F('product')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0018_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0019_alter_order_coupon",
        "description": "order.migrations.0019_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0019_remove_productimage_image'),\n        ('order', '0018_alter_order_coupon'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to={'end_date__lt': datetime.date(2023, 6, 12), 'product': models.F('product')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0019_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0020_alter_order_coupon",
        "description": "order.migrations.0020_alter_order_coupon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0021_alter_productpackage_image'),\n        ('order', '0019_alter_order_coupon'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='coupon',\n            field=models.ForeignKey(blank=True, limit_choices_to={'end_date__gt': datetime.date(2023, 6, 17), 'product': models.F('product')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.coupon'),",
        "detail": "order.migrations.0020_alter_order_coupon",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "order.apps",
        "description": "order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'order'",
        "detail": "order.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class Order(models.Model):\n    class StatusChoices(models.TextChoices):\n        IN_CART = 'IN_CART', \"IN_CART\"\n        SUBMITTED = 'SUBMITTED', \"SUBMITTED\"\n        SHIPPED = 'SHIPPED', \"SHIPPED\"\n        DELEVRED = 'DELEVRED', \"DELEVRED\"\n    user = models.ForeignKey(USER, on_delete=models.SET_NULL, null=True, limit_choices_to={\n        'user_type': 'CUSTOMER'})\n    shipping_info = models.ForeignKey(\n        'user.ShippingInfo', on_delete=models.SET_NULL, null=True, blank=True)",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "USER",
        "kind": 5,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "USER = get_user_model()\nclass Order(models.Model):\n    class StatusChoices(models.TextChoices):\n        IN_CART = 'IN_CART', \"IN_CART\"\n        SUBMITTED = 'SUBMITTED', \"SUBMITTED\"\n        SHIPPED = 'SHIPPED', \"SHIPPED\"\n        DELEVRED = 'DELEVRED', \"DELEVRED\"\n    user = models.ForeignKey(USER, on_delete=models.SET_NULL, null=True, limit_choices_to={\n        'user_type': 'CUSTOMER'})\n    shipping_info = models.ForeignKey(",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class OrderSerializer:\n    def get_data(self, user_id):\n        subquery_product_image = ProductImage.objects.filter(\n            product_id=OuterRef('product_id')).values('image')\n        orders = Order.objects.filter(\n            product__store__user__id=user_id\n        ).annotate(\n            product_image=Subquery(subquery_product_image)\n        ).select_related('product', 'coupon').values(\n            'id', 'product__title', 'product_image', 'price', 'pack__title', \"status\"",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "order.urls",
        "description": "order.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"my-orders/\", GetMyOrdersView.as_view()),  \n    path(\"order/create/\", CreateOrderView.as_view()),\n    path(\"vendor/orders/\", VendorOrdersView.as_view())\n]",
        "detail": "order.urls",
        "documentation": {}
    },
    {
        "label": "GetMyOrdersView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class GetMyOrdersView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        try:\n            orders = Order.objects.filter(user_id=request.user.id).exclude(status='IN_CART').values(\n                'id', 'product__title', 'quantity', 'price', 'status', 'created_at')\n            data = list(orders)\n            return Response({\"type\": \"success\", \"data\": data})\n        except:",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "CreateOrderView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class CreateOrderView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        try:\n            address = request.data.get('address')\n            phone_number = request.data.get('phoneNumber')\n            postal_code = request.data.get('postalCode')\n            if not address or not phone_number or not postal_code:\n                return Response({\"type\": \"error\", \"message\": \"Please enter all needed informations\"})",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "VendorOrdersView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class VendorOrdersView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        if request.user.user_type == \"VENDOR\":\n            serializer = OrderSerializer()\n            data = serializer.get_data(request.user.id)\n            return Response({\"type\": \"success\", \"data\": list(data)})\n        return Response({\"type\":\"error\", \"message\": \"User not valid\"})\n    def put(self, request):",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0001_initial",
        "description": "product.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "product.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0002_initial",
        "description": "product.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='user',",
        "detail": "product.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0003_alter_product_user",
        "description": "product.migrations.0003_alter_product_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0007_alter_customuser_image'),\n        ('product', '0002_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='user',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.store'),",
        "detail": "product.migrations.0003_alter_product_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0004_remove_productpackage_product_product_packs",
        "description": "product.migrations.0004_remove_productpackage_product_product_packs",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0003_alter_product_user'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='productpackage',\n            name='product',\n        ),\n        migrations.AddField(",
        "detail": "product.migrations.0004_remove_productpackage_product_product_packs",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0005_remove_product_packs_productpackage_product",
        "description": "product.migrations.0005_remove_product_packs_productpackage_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0004_remove_productpackage_product_product_packs'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='packs',\n        ),\n        migrations.AddField(",
        "detail": "product.migrations.0005_remove_product_packs_productpackage_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0006_alter_category_parent",
        "description": "product.migrations.0006_alter_category_parent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0005_remove_product_packs_productpackage_product'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='parent',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.category'),\n        ),",
        "detail": "product.migrations.0006_alter_category_parent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0007_rename_user_product_store",
        "description": "product.migrations.0007_rename_user_product_store",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0006_alter_category_parent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='product',\n            old_name='user',\n            new_name='store',\n        ),",
        "detail": "product.migrations.0007_rename_user_product_store",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0008_product_in_stock",
        "description": "product.migrations.0008_product_in_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0007_rename_user_product_store'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='in_stock',\n            field=models.IntegerField(default=30),\n            preserve_default=False,",
        "detail": "product.migrations.0008_product_in_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0009_review_product",
        "description": "product.migrations.0009_review_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0008_product_in_stock'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='product',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='product.product'),\n            preserve_default=False,",
        "detail": "product.migrations.0009_review_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0010_alter_review_user",
        "description": "product.migrations.0010_alter_review_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0009_review_product'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='review',\n            name='user',\n            field=models.ForeignKey(limit_choices_to={'user__user_type': 'CUSTOMER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),",
        "detail": "product.migrations.0010_alter_review_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0011_alter_category_parent",
        "description": "product.migrations.0011_alter_category_parent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0010_alter_review_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='parent',\n            field=models.ForeignKey(blank=True, limit_choices_to={'parent__is_null': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.category'),\n        ),",
        "detail": "product.migrations.0011_alter_category_parent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0012_alter_category_parent_alter_productpackage_image",
        "description": "product.migrations.0012_alter_category_parent_alter_productpackage_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0011_alter_category_parent'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='parent',\n            field=models.ForeignKey(blank=True, limit_choices_to={'parent__isnull': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.category'),\n        ),",
        "detail": "product.migrations.0012_alter_category_parent_alter_productpackage_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0013_review_created_at",
        "description": "product.migrations.0013_review_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0012_alter_category_parent_alter_productpackage_image'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='created_at',\n            field=models.DateTimeField(auto_created=True, auto_now_add=True, default=datetime.datetime(2023, 6, 3, 15, 17, 2, 9921, tzinfo=datetime.timezone.utc)),\n            preserve_default=False,",
        "detail": "product.migrations.0013_review_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0014_alter_review_user",
        "description": "product.migrations.0014_alter_review_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0013_review_created_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='review',\n            name='user',\n            field=models.ForeignKey(limit_choices_to={'user_type': 'CUSTOMER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),",
        "detail": "product.migrations.0014_alter_review_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0015_remove_coupon_percentage_coupon_value_and_more",
        "description": "product.migrations.0015_remove_coupon_percentage_coupon_value_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0014_alter_review_user'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='coupon',\n            name='percentage',\n        ),\n        migrations.AddField(",
        "detail": "product.migrations.0015_remove_coupon_percentage_coupon_value_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0016_remove_coupon_value_coupon_percentage_and_more",
        "description": "product.migrations.0016_remove_coupon_value_coupon_percentage_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0015_remove_coupon_percentage_coupon_value_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='coupon',\n            name='value',\n        ),\n        migrations.AddField(",
        "detail": "product.migrations.0016_remove_coupon_value_coupon_percentage_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0017_remove_coupon_percentage_coupon_value_and_more",
        "description": "product.migrations.0017_remove_coupon_percentage_coupon_value_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0016_remove_coupon_value_coupon_percentage_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='coupon',\n            name='percentage',\n        ),\n        migrations.AddField(",
        "detail": "product.migrations.0017_remove_coupon_percentage_coupon_value_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0018_rename_categoryid_product_category",
        "description": "product.migrations.0018_rename_categoryid_product_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0017_remove_coupon_percentage_coupon_value_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='product',\n            old_name='categoryID',\n            new_name='category',\n        ),",
        "detail": "product.migrations.0018_rename_categoryid_product_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0019_remove_productimage_image",
        "description": "product.migrations.0019_remove_productimage_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0018_rename_categoryid_product_category'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='productimage',\n            name='image',\n        ),\n    ]",
        "detail": "product.migrations.0019_remove_productimage_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0020_productimage_image",
        "description": "product.migrations.0020_productimage_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0019_remove_productimage_image'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='productimage',\n            name='image',\n            field=models.ImageField(default='', upload_to=product.models.make_product_image_path),\n            preserve_default=False,",
        "detail": "product.migrations.0020_productimage_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0021_alter_productpackage_image",
        "description": "product.migrations.0021_alter_productpackage_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('product', '0020_productimage_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='productpackage',\n            name='image',\n            field=models.ImageField(upload_to=product.models.make_product_packs_image_path),\n        ),",
        "detail": "product.migrations.0021_alter_productpackage_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0022_product_buy_price_productpackage_quantity_and_more",
        "description": "product.migrations.0022_product_buy_price_productpackage_quantity_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0013_shippinginfo_phone_number'),\n        ('product', '0021_alter_productpackage_image'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='buy_price',\n            field=models.FloatField(default=20),",
        "detail": "product.migrations.0022_product_buy_price_productpackage_quantity_and_more",
        "documentation": {}
    },
    {
        "label": "ProductConfig",
        "kind": 6,
        "importPath": "product.apps",
        "description": "product.apps",
        "peekOfCode": "class ProductConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'product'",
        "detail": "product.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class Category(models.Model):\n    parent = models.ForeignKey(\n        \"self\", on_delete=models.CASCADE, null=True, blank=True, limit_choices_to={\"parent__isnull\": True})\n    name = models.CharField(max_length=100)\nclass Product(models.Model):\n    store = models.ForeignKey(\n        'user.Store', on_delete=models.CASCADE)\n    title = models.CharField(max_length=100)\n    category = models.ForeignKey(\n        Category, on_delete=models.SET_NULL, null=True)",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class Product(models.Model):\n    store = models.ForeignKey(\n        'user.Store', on_delete=models.CASCADE)\n    title = models.CharField(max_length=100)\n    category = models.ForeignKey(\n        Category, on_delete=models.SET_NULL, null=True)\n    description = models.TextField()\n    price = models.FloatField()\n    buy_price = models.FloatField()\n    in_stock = models.IntegerField()",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductPackage",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class ProductPackage(models.Model):\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, null=True, blank=True)\n    image = models.ImageField(upload_to=make_product_packs_image_path)\n    title = models.CharField(max_length=100)\n    quantity = models.PositiveIntegerField()\nclass ProductImage(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=make_product_image_path)\nclass Review(models.Model):",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class ProductImage(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=make_product_image_path)\nclass Review(models.Model):\n    class IntegerChoices(models.IntegerChoices):\n        CHOICE_ONE = 1, 'One'\n        CHOICE_TWO = 2, 'Two'\n        CHOICE_THREE = 3, 'Three'\n        CHOICE_FOUR = 4, 'Four'\n        CHOICE_FIVE = 5, 'Five'",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class Review(models.Model):\n    class IntegerChoices(models.IntegerChoices):\n        CHOICE_ONE = 1, 'One'\n        CHOICE_TWO = 2, 'Two'\n        CHOICE_THREE = 3, 'Three'\n        CHOICE_FOUR = 4, 'Four'\n        CHOICE_FIVE = 5, 'Five'\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    user = models.ForeignKey(USER, on_delete=models.SET_NULL, null=True, limit_choices_to={\n        'user_type': 'CUSTOMER'})",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Coupon",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class Coupon(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    code = models.CharField(max_length=20)\n    value = models.FloatField(validators=[\n        MinValueValidator(1, message='Minimum value is 1.'),\n    ])\n    end_date = models.DateTimeField(auto_now=False, auto_now_add=False)\n    start_date = models.DateTimeField(auto_now_add=True)\n    def clean(self) -> None:\n        if self.product and self.product.price < self.value:",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Discount",
        "kind": 6,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "class Discount(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    title = models.CharField(max_length=30)\n    percentage = models.PositiveIntegerField(validators=[\n        MinValueValidator(0, message='Minimum value is 1.'),\n        MaxValueValidator(90, message='Maximum value is 100.')\n    ])\n    end_date = models.DateTimeField(auto_now=False, auto_now_add=False)\n    start_date = models.DateTimeField(auto_now_add=True)",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "make_product_image_path",
        "kind": 2,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "def make_product_image_path(instance, filename):\n    username = instance.product.store.user.username\n    filename = f\"p_{instance.product.id}_{instance.id}.jpeg\"\n    return os.path.join('./uploads/vendors', username, 'product', filename)\ndef make_product_packs_image_path(instance, filename):\n    username = instance.product.store.user.username\n    filename = f\"pk_{instance.product.id}_{instance.id}.jpeg\"\n    return os.path.join('./uploads/vendors', username, 'product', filename)\nclass Category(models.Model):\n    parent = models.ForeignKey(",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "make_product_packs_image_path",
        "kind": 2,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "def make_product_packs_image_path(instance, filename):\n    username = instance.product.store.user.username\n    filename = f\"pk_{instance.product.id}_{instance.id}.jpeg\"\n    return os.path.join('./uploads/vendors', username, 'product', filename)\nclass Category(models.Model):\n    parent = models.ForeignKey(\n        \"self\", on_delete=models.CASCADE, null=True, blank=True, limit_choices_to={\"parent__isnull\": True})\n    name = models.CharField(max_length=100)\nclass Product(models.Model):\n    store = models.ForeignKey(",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "USER",
        "kind": 5,
        "importPath": "product.models",
        "description": "product.models",
        "peekOfCode": "USER = get_user_model()\ndef make_product_image_path(instance, filename):\n    username = instance.product.store.user.username\n    filename = f\"p_{instance.product.id}_{instance.id}.jpeg\"\n    return os.path.join('./uploads/vendors', username, 'product', filename)\ndef make_product_packs_image_path(instance, filename):\n    username = instance.product.store.user.username\n    filename = f\"pk_{instance.product.id}_{instance.id}.jpeg\"\n    return os.path.join('./uploads/vendors', username, 'product', filename)\nclass Category(models.Model):",
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "class ProductSerializer:\n    def get_products(self, has_discount=False):\n        subquery_image = ProductImage.objects.filter(\n            product=OuterRef('id')\n        ).values('image')[:1]\n        subquery_discount = Discount.objects.filter(\n            product=OuterRef('id'),\n            end_date__gt=datetime.today()\n        ).order_by(\"-id\").values('percentage')[:1]\n        products = Product.objects.annotate(",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "class CategorySerializer:\n    def get_all_categories(self):\n        categories = Category.objects.filter(\n            parent__isnull=True).values('id', 'name')\n        return list(categories)\n    def get_hot_categories(self):\n        subquery_image = ProductImage.objects.filter(\n            product=OuterRef('id')\n        ).values('image')[:1]\n        subquery_completed_orders = Order.objects.filter(",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewsSerializer",
        "kind": 6,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "class ReviewsSerializer:\n    def get_reviews(self, id):\n        subquery_user_image = User.objects.filter(\n            id=OuterRef('id'),\n            user_type='CUSTOMER'\n        ).values('image')[:1]\n        subquery_user_first_name = User.objects.filter(\n            id=OuterRef('id'),\n            user_type='CUSTOMER'\n        ).values('first_name')[:1]",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "CouponSerializer",
        "kind": 6,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "class CouponSerializer:\n    def get_data(self, user_id):\n        order_subquery = Order.objects.filter(\n            status=\"DELEVRED\",\n            product__store__user__id=user_id,\n            coupon_id=OuterRef('id')).annotate(orders=Count('pk')).values('orders')[:1]\n        product_image_subquery = ProductImage.objects.filter(\n            product_id=OuterRef('product__id')).values('image')[:1]\n        coupons = Coupon.objects.filter(\n            product__store__user__id=user_id",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "DiscountSerializer",
        "kind": 6,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "class DiscountSerializer:\n    def get_data(self, user_id):\n        order_subquery = Order.objects.filter(\n            status=\"DELEVRED\",\n            product__store__user__id=user_id,\n            created_at__lt=OuterRef('end_date'),\n            created_at__gte=OuterRef('start_date')\n        ).annotate(orders=Count('pk')).values('orders')[:1]\n        product_image_subquery = ProductImage.objects.filter(\n            product_id=OuterRef('product__id')).values('image')[:1]",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "product.serializers",
        "description": "product.serializers",
        "peekOfCode": "User = get_user_model()\nclass ProductSerializer:\n    def get_products(self, has_discount=False):\n        subquery_image = ProductImage.objects.filter(\n            product=OuterRef('id')\n        ).values('image')[:1]\n        subquery_discount = Discount.objects.filter(\n            product=OuterRef('id'),\n            end_date__gt=datetime.today()\n        ).order_by(\"-id\").values('percentage')[:1]",
        "detail": "product.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "product.urls",
        "description": "product.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"products/\", GetProductsView.as_view()),\n    path(\"products/super-deals/\", GetSuperDealsView.as_view()),  # ver\n    path(\"products/id/<int:id>/\", GetProductDetailsView.as_view()),\n    path(\"categories/top/\", GetHotCategoriesView.as_view()),  # ver\n    path(\"categories/\", GetCategoriesView.as_view()),  # ver\n    path(\"reviews/<int:id>\", GetReviewsView.as_view()),  # ver\n    path(\"dashboard/\", DashboardDataView.as_view()),\n    path(\"vendor/products/\", ProductView.as_view()),\n    path(\"vendor/products/<int:id>\", ProductDetailsView.as_view()),",
        "detail": "product.urls",
        "documentation": {}
    },
    {
        "label": "GetSuperDealsView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetSuperDealsView(APIView):\n    def get(self, request):\n        try:\n            serializer = ProductSerializer()\n            data = serializer.get_super_deals()\n            return Response({\"type\": \"success\", \"data\": data})\n        except:\n            return Response({\"type\": \"error\", \"data\": \"Something went wrong try later\"})\nclass GetHotCategoriesView(APIView):\n    def get(self, request):",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "GetHotCategoriesView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetHotCategoriesView(APIView):\n    def get(self, request):\n        try:\n            serializer = CategorySerializer()\n            data = serializer.get_hot_categories()\n            return Response({\"type\": \"success\", \"data\": data})\n        except:\n            return Response({\"type\": \"error\", \"data\": \"Something went wrong try later\"})\nclass GetProductsView(APIView):\n    def get(self, request):",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "GetProductsView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetProductsView(APIView):\n    def get(self, request):\n        try:\n            serializer = ProductSerializer()\n            products = serializer.get_products()\n            keyword = request.GET.get('q')\n            price_from = int(request.GET.get('from')) if request.GET.get(\n                'from') else request.GET.get('from')\n            price_to = int(request.GET.get('to')) if request.GET.get(\n                'to') else request.GET.get('to')",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "ProductDetailsView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class ProductDetailsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request, id=None):\n        if request.user.user_type == \"VENDOR\":\n            serializer = ProductSerializer()\n            data = serializer.get_product_details_for_vendor(\n                request.user.id, id)\n            if not id:\n                return Response({\"type\": \"error\", \"message\": \"Product id is missing\"})",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "ProductView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class ProductView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        if request.user.user_type == \"VENDOR\":\n            serializer = ProductSerializer()\n            data = serializer.get_products_for_vendor(request.user.id)\n            if not data:\n                return Response({\"type\": \"error\", \"message\": \"Product not found\"})\n            return Response({\"type\": \"success\", \"data\": list(data)})",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "CouponView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class CouponView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        if request.user.user_type == \"VENDOR\":\n            serializer = CouponSerializer()\n            data = serializer.get_data(request.user.id)\n            return Response({\"type\": \"success\", \"data\": list(data)})\n        return Response({\"type\": \"error\", \"message\": \"There is no coupons for you\"})\n    def post(self, request):",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "DiscountView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class DiscountView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        serializer = DiscountSerializer()\n        data = serializer.get_data(request.user.id)\n        return Response({\"type\": \"success\", \"data\": list(data)})\n    def post(self, request):\n        if request.user.user_type == \"VENDOR\":\n            product_id = request.data.get('product_id')",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "GetCategoriesView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetCategoriesView(APIView):\n    def get(self, request):\n        try:\n            serializer = CategorySerializer()\n            data = serializer.get_all_categories()\n            return Response({\"type\": \"success\", \"data\": data})\n        except:\n            return Response({\"type\": \"error\", \"message\": \"Something went wrong, try later\"})\nclass GetProductDetailsView(APIView):\n    def get(self, request, id):",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "GetProductDetailsView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetProductDetailsView(APIView):\n    def get(self, request, id):\n        serializer = ProductSerializer()\n        data = serializer.get_product_details(id)\n        return Response({\"type\": \"success\", \"data\": data})\nclass GetReviewsView(APIView):\n    def get(self, request, id):\n        serializer = ReviewsSerializer()\n        stats = serializer.get_reviews_stats(id)\n        reviews = serializer.get_reviews(id)",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "GetReviewsView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class GetReviewsView(APIView):\n    def get(self, request, id):\n        serializer = ReviewsSerializer()\n        stats = serializer.get_reviews_stats(id)\n        reviews = serializer.get_reviews(id)\n        return Response({\"type\": \"success\", \"data\": {\"stats\": stats, \"reviews\": reviews}})\nUser = get_user_model()\nclass DashboardDataView(APIView):\n    def get(self, request):\n        data = {}",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "DashboardDataView",
        "kind": 6,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "class DashboardDataView(APIView):\n    def get(self, request):\n        data = {}\n        data['products'] = Product.objects.filter(\n            store__user__id=request.user.id).count()\n        data['orders'] = Order.objects.filter(\n            product__store__user__id=request.user.id,\n            status=\"DELEVRED\"\n        ).count()\n        data['reviews'] = Review.objects.filter(",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "product.views",
        "description": "product.views",
        "peekOfCode": "User = get_user_model()\nclass DashboardDataView(APIView):\n    def get(self, request):\n        data = {}\n        data['products'] = Product.objects.filter(\n            store__user__id=request.user.id).count()\n        data['orders'] = Order.objects.filter(\n            product__store__user__id=request.user.id,\n            status=\"DELEVRED\"\n        ).count()",
        "detail": "product.views",
        "documentation": {}
    },
    {
        "label": "TrackingConfig",
        "kind": 6,
        "importPath": "tracking.apps",
        "description": "tracking.apps",
        "peekOfCode": "class TrackingConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tracking'",
        "detail": "tracking.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0001_initial",
        "description": "user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0002_auto_20230526_2346",
        "description": "user.migrations.0002_auto_20230526_2346",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customuser',\n            name='USERNAME_FIELD',\n            field=models.CharField(default=django.utils.timezone.now, max_length=20, unique=True),\n            preserve_default=False,",
        "detail": "user.migrations.0002_auto_20230526_2346",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0003_auto_20230526_2347",
        "description": "user.migrations.0003_auto_20230526_2347",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0002_auto_20230526_2346'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customuser',\n            name='USERNAME_FIELD',\n        ),\n        migrations.AlterField(",
        "detail": "user.migrations.0003_auto_20230526_2347",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0004_appreviews",
        "description": "user.migrations.0004_appreviews",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_auto_20230526_2347'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AppReviews',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('review', models.TextField()),",
        "detail": "user.migrations.0004_appreviews",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0005_alter_customuser_is_active_and_more",
        "description": "user.migrations.0005_alter_customuser_is_active_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0004_appreviews'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='is_active',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "user.migrations.0005_alter_customuser_is_active_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0006_alter_customuser_image",
        "description": "user.migrations.0006_alter_customuser_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0005_alter_customuser_is_active_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='image',\n            field=models.ImageField(null=True, upload_to='uplaods/user'),\n        ),",
        "detail": "user.migrations.0006_alter_customuser_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0007_alter_customuser_image",
        "description": "user.migrations.0007_alter_customuser_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0006_alter_customuser_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='image',\n            field=models.ImageField(blank=True, null=True, upload_to='uplaods/user'),\n        ),",
        "detail": "user.migrations.0007_alter_customuser_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0008_alter_store_user",
        "description": "user.migrations.0008_alter_store_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0007_alter_customuser_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='store',\n            name='user',\n            field=models.OneToOneField(limit_choices_to={'user__user_type': 'VENDOR'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "user.migrations.0008_alter_store_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0009_alter_store_name",
        "description": "user.migrations.0009_alter_store_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0008_alter_store_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='store',\n            name='name',\n            field=models.CharField(max_length=30),\n        ),",
        "detail": "user.migrations.0009_alter_store_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0010_alter_store_cover_alter_store_logo",
        "description": "user.migrations.0010_alter_store_cover_alter_store_logo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0009_alter_store_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='store',\n            name='cover',\n            field=models.ImageField(blank=True, null=True, upload_to=user.models.make_cover_image_path),\n        ),",
        "detail": "user.migrations.0010_alter_store_cover_alter_store_logo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0011_appreviews_created_at",
        "description": "user.migrations.0011_appreviews_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0010_alter_store_cover_alter_store_logo'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='appreviews',\n            name='created_at',\n            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2023, 6, 2, 20, 39, 55, 10350, tzinfo=datetime.timezone.utc)),\n            preserve_default=False,",
        "detail": "user.migrations.0011_appreviews_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0012_alter_store_user",
        "description": "user.migrations.0012_alter_store_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0011_appreviews_created_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='store',\n            name='user',\n            field=models.OneToOneField(limit_choices_to={'user_type': 'VENDOR'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "user.migrations.0012_alter_store_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0013_shippinginfo_phone_number",
        "description": "user.migrations.0013_shippinginfo_phone_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0012_alter_store_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='shippinginfo',\n            name='phone_number',\n            field=models.CharField(default=6546511313245, max_length=20),\n            preserve_default=False,",
        "detail": "user.migrations.0013_shippinginfo_phone_number",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "user.apps",
        "description": "user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'user'",
        "detail": "user.apps",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    class TypeChoices(models.TextChoices):\n        ADMIN = \"ADMIN\", \"ADMIN\"\n        VENDOR = \"VENDOR\", \"VENDOR\"\n        CUSTOMER = \"CUSTOMER\", \"CUSTOMER\"\n    phone_number = models.CharField(max_length=15, blank=True)\n    image = models.ImageField(\n        upload_to=make_profile_image_path, null=True, default=\"media/avatar.jpeg\")\n    email = models.EmailField(unique=True)\n    first_name = models.CharField(max_length=20, default=\"sad\")",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "ShippingInfo",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class ShippingInfo(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    address = models.CharField(max_length=50)\n    phone_number = models.CharField(max_length=20)\n    postal_code = models.CharField(max_length=20)\nclass Store(models.Model):\n    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE, limit_choices_to={\n        'user_type': 'VENDOR'})\n    name = models.CharField(max_length=30)\n    description = models.TextField()",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Store",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class Store(models.Model):\n    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE, limit_choices_to={\n        'user_type': 'VENDOR'})\n    name = models.CharField(max_length=30)\n    description = models.TextField()\n    logo = models.ImageField(\n        upload_to=make_logo_image_path, null=True, blank=True)\n    cover = models.ImageField(\n        upload_to=make_cover_image_path, null=True, blank=True)\nclass AppReviews(models.Model):",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "AppReviews",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class AppReviews(models.Model):\n    class IntegerChoices(models.IntegerChoices):\n        CHOICE_ONE = 1, 'One'\n        CHOICE_TWO = 2, 'Two'\n        CHOICE_THREE = 3, 'Three'\n        CHOICE_FOUR = 4, 'Four'\n        CHOICE_FIVE = 5, 'Five'\n    user = models.ForeignKey(CustomUser, on_delete=models.SET_NULL, null=True)\n    review = models.TextField()\n    stars = models.IntegerField(choices=IntegerChoices.choices)",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "make_profile_image_path",
        "kind": 2,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "def make_profile_image_path(instance, filename):\n    username = instance.username\n    filename = f\"profile_{filename}\"\n    return os.path.join(f'uploads/{instance.type}', username, filename)\ndef make_logo_image_path(instance, filename):\n    username = instance.user.username\n    filename = f\"logo_{filename}\"\n    return os.path.join('uploads/vendors', username, filename)\ndef make_cover_image_path(instance, filename):\n    username = instance.user.username",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "make_logo_image_path",
        "kind": 2,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "def make_logo_image_path(instance, filename):\n    username = instance.user.username\n    filename = f\"logo_{filename}\"\n    return os.path.join('uploads/vendors', username, filename)\ndef make_cover_image_path(instance, filename):\n    username = instance.user.username\n    filename = f\"cover_{filename}\"\n    return os.path.join('uploads/vendors', username, filename)\nclass CustomUser(AbstractUser):\n    class TypeChoices(models.TextChoices):",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "make_cover_image_path",
        "kind": 2,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "def make_cover_image_path(instance, filename):\n    username = instance.user.username\n    filename = f\"cover_{filename}\"\n    return os.path.join('uploads/vendors', username, filename)\nclass CustomUser(AbstractUser):\n    class TypeChoices(models.TextChoices):\n        ADMIN = \"ADMIN\", \"ADMIN\"\n        VENDOR = \"VENDOR\", \"VENDOR\"\n        CUSTOMER = \"CUSTOMER\", \"CUSTOMER\"\n    phone_number = models.CharField(max_length=15, blank=True)",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "StoreSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class StoreSerializer:\n    def get_top_stores(self):\n        subquery_order = Order.objects.filter(status=\"DELEVRED\").filter(\n            id=OuterRef('id')).annotate(orders_count=Count('id')).values('orders_count')[:1]\n        stores = Store.objects.annotate(order_count=Subquery(subquery_order), reviews_avg=Coalesce(Avg('product__review__stars'), Value(0.0))\n                                        ).order_by('-order_count', \"-reviews_avg\"\n                                                   ).values(\n            'id', 'name', 'logo', 'order_count',\n            'description', 'reviews_avg'\n        )[:8]",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AppReviews\n        fields = '__all__'\nclass CustomersSerializer:\n    def get_data(self, user_id):\n        customers = USER.objects.annotate(\n            spent=Sum(\"order__price\", filter=Q(order__status= \"DELEVRED\", order__product__store__user__id=user_id)),\n            orders=Count(\n                \"order\", filter=Q(order__status= \"DELEVRED\", order__product__store__user__id=user_id)),",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "CustomersSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class CustomersSerializer:\n    def get_data(self, user_id):\n        customers = USER.objects.annotate(\n            spent=Sum(\"order__price\", filter=Q(order__status= \"DELEVRED\", order__product__store__user__id=user_id)),\n            orders=Count(\n                \"order\", filter=Q(order__status= \"DELEVRED\", order__product__store__user__id=user_id)),\n            reviews=Count(\"review\")\n        ).filter(orders__gt=0).values(\n            'first_name', 'last_name', 'image',\n            'orders', 'reviews', 'spent'",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "USER",
        "kind": 5,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "USER = get_user_model()\nclass StoreSerializer:\n    def get_top_stores(self):\n        subquery_order = Order.objects.filter(status=\"DELEVRED\").filter(\n            id=OuterRef('id')).annotate(orders_count=Count('id')).values('orders_count')[:1]\n        stores = Store.objects.annotate(order_count=Subquery(subquery_order), reviews_avg=Coalesce(Avg('product__review__stars'), Value(0.0))\n                                        ).order_by('-order_count', \"-reviews_avg\"\n                                                   ).values(\n            'id', 'name', 'logo', 'order_count',\n            'description', 'reviews_avg'",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "user.urls",
        "description": "user.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"account/info/\", SettingsView.as_view()),\n    path(\"vendor/customers/\", GetCustomersView.as_view()),\n    path(\"account/update/\", UpdateSettingsView.as_view()),  # ver\n    path(\"login/\", LoginView.as_view()),  # ver\n    path(\"refresh/\", RefreshTokenView.as_view()),  # ver\n    path(\"signup/\", SignupView.as_view()),  # ver\n    path(\"stores/id/<int:id>/\", GetStoreByIDView.as_view()),\n    path(\"stores/top/\", GetTopStorseView.as_view()),  # ver\n    path(\"app-reviews/\", GetAppReviewsView.as_view()),  # ver",
        "detail": "user.urls",
        "documentation": {}
    },
    {
        "label": "SettingsView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class SettingsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        user = User.objects.filter(id=request.user.id)\n        if not user.exists():\n            return Response({\"type\": \"error\", \"message\": \"user not fount\"})\n        user = user.get()\n        data = {\n            \"first_name\": user.first_name,",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "UpdateSettingsView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class UpdateSettingsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        import json\n        user = User.objects.filter(id=request.user.id)\n        if not user.exists():\n            return Response({\"type\": \"error\", \"message\": \"User not found\"})\n        user = user.get()\n        image = request.data.get('file')",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class LoginView(APIView):\n    def post(self, request):\n        username = request.data.get('username')\n        password = request.data.get('password')\n        user = authenticate(username=username, password=password)\n        if user is not None:\n            refresh = RefreshToken.for_user(user)\n            response_data = {\n                \"type\": \"success\",\n                'refresh': str(refresh),",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "RefreshTokenView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class RefreshTokenView(APIView):\n    def post(self, request):\n        refresh = request.data.get('refresh')\n        if refresh:\n            token = RefreshToken(refresh)\n            access = str(token.access_token)\n            user_id = token.payload['user_id']\n            user = User.objects.filter(id=user_id).get()\n            image = None\n            if user.image:",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "SignupView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class SignupView(APIView):\n    @csrf_exempt\n    def post(self, request):\n        first_name = request.data.get('firstName')\n        last_name = request.data.get('lastName')\n        password = request.data.get('password')\n        password_confermation = request.data.get(\"passwordConfermation\")\n        email = request.data.get('email')\n        phone_number = request.data.get('phoneNumber')\n        if not last_name or not phone_number or not first_name or not password or not email or not password_confermation:",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "GetStoreByIDView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class GetStoreByIDView(APIView):\n    def get(self, request, id):\n        serializer = StoreSerializer()\n        data = serializer.get_store_details(id)\n        if data:\n            return Response({'type': 'success', 'data': data})\n        return Response({'type': 'error', 'message': \"Store not found\"})\nclass GetTopStorseView(APIView):\n    def get(self, request):\n        try:",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "GetTopStorseView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class GetTopStorseView(APIView):\n    def get(self, request):\n        try:\n            serializer = StoreSerializer()\n            data = serializer.get_top_stores()\n            return Response({'type': 'success', 'data': data})\n        except:\n            return Response({'type': 'error', 'message': 'Something went wrong refresh the page'})\nclass GetAppReviewsView(APIView):\n    def get(self, request):",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "GetAppReviewsView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class GetAppReviewsView(APIView):\n    def get(self, request):\n        try:\n            query = AppReviews.objects.all()[:5]\n            data = list(query)\n            return Response({\"type\": \"success\", \"data\": data})\n        except:\n            return Response({\"type\": \"error\", \"message\": \"Something went wrong try later\"})\nclass GetCustomersView(APIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "GetCustomersView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class GetCustomersView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        if request.user.user_type == \"VENDOR\":\n            serializer = CustomersSerializer()\n            data = serializer.get_data(request.user.id)\n            return Response({\"type\": \"success\", \"data\": list(data)})\n        return Response({\"type\": \"error\", \"message\": \"user not valid\"})",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "User = get_user_model()\nclass SettingsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        user = User.objects.filter(id=request.user.id)\n        if not user.exists():\n            return Response({\"type\": \"error\", \"message\": \"user not fount\"})\n        user = user.get()\n        data = {",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "wishlist.migrations.0001_initial",
        "description": "wishlist.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('product', '0002_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='WishList',\n            fields=[",
        "detail": "wishlist.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "wishlist.migrations.0002_alter_wishlist_user",
        "description": "wishlist.migrations.0002_alter_wishlist_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('wishlist', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='wishlist',\n            name='user',\n            field=models.OneToOneField(limit_choices_to={'user__user_type': 'CUSTOMER'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "wishlist.migrations.0002_alter_wishlist_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "wishlist.migrations.0003_alter_wishlist_user",
        "description": "wishlist.migrations.0003_alter_wishlist_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('wishlist', '0002_alter_wishlist_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='wishlist',\n            name='user',\n            field=models.OneToOneField(limit_choices_to={'user_type': 'CUSTOMER'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "wishlist.migrations.0003_alter_wishlist_user",
        "documentation": {}
    },
    {
        "label": "WishlistConfig",
        "kind": 6,
        "importPath": "wishlist.apps",
        "description": "wishlist.apps",
        "peekOfCode": "class WishlistConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'wishlist'",
        "detail": "wishlist.apps",
        "documentation": {}
    },
    {
        "label": "WishList",
        "kind": 6,
        "importPath": "wishlist.models",
        "description": "wishlist.models",
        "peekOfCode": "class WishList(models.Model):\n    user = models.OneToOneField(USER, on_delete=models.CASCADE, limit_choices_to={\n                                'user_type': 'CUSTOMER'})\n    products = models.ManyToManyField(\"product.Product\")",
        "detail": "wishlist.models",
        "documentation": {}
    },
    {
        "label": "USER",
        "kind": 5,
        "importPath": "wishlist.models",
        "description": "wishlist.models",
        "peekOfCode": "USER = get_user_model()\nclass WishList(models.Model):\n    user = models.OneToOneField(USER, on_delete=models.CASCADE, limit_choices_to={\n                                'user_type': 'CUSTOMER'})\n    products = models.ManyToManyField(\"product.Product\")",
        "detail": "wishlist.models",
        "documentation": {}
    },
    {
        "label": "WishListSerializer",
        "kind": 6,
        "importPath": "wishlist.seriliazes",
        "description": "wishlist.seriliazes",
        "peekOfCode": "class WishListSerializer:\n    def get_products(self, products):\n        subquery_image = ProductImage.objects.filter(\n            product=OuterRef('id')\n        ).values('image')[:1]\n        subquery_discount = Discount.objects.filter(\n            product=OuterRef('id')\n        ).order_by(\"-id\").values('percentage')[:1]\n        subquery_completed_orders = Order.objects.filter(\n            product=OuterRef('id'), status='DELEVRED'",
        "detail": "wishlist.seriliazes",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "wishlist.urls",
        "description": "wishlist.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"wish-list/products/\", GetWishListDetailsView.as_view()),\n    path(\"wish-list/has-product/<int:id>\", ProductInWishListView.as_view()),\n    path(\"wish-list/add-product/\", AddProductToWishListView.as_view()),\n    path(\"wish-list/delete-product/\", DeleteProductFromWishList.as_view()),\n    path(\"check/\", index),\n]",
        "detail": "wishlist.urls",
        "documentation": {}
    },
    {
        "label": "GetWishListDetailsView",
        "kind": 6,
        "importPath": "wishlist.views",
        "description": "wishlist.views",
        "peekOfCode": "class GetWishListDetailsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        serializer = WishListSerializer()\n        data = serializer.get_data(request.user.id)\n        if data:\n            return Response({\"type\": \"success\", \"data\": data})\n        return Response({\"type\": \"success\", \"data\": []})\nclass ProductInWishListView(APIView):",
        "detail": "wishlist.views",
        "documentation": {}
    },
    {
        "label": "ProductInWishListView",
        "kind": 6,
        "importPath": "wishlist.views",
        "description": "wishlist.views",
        "peekOfCode": "class ProductInWishListView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request, id):\n        wish_list = WishList.objects.filter(user_id=request.user.id)\n        if wish_list.exists():\n            wish_list = wish_list.get()\n            data = wish_list.products.filter(id=id).exists()\n            return Response({\"type\": \"success\", \"data\": data})\n        return Response({\"type\": \"success\", \"data\": False})",
        "detail": "wishlist.views",
        "documentation": {}
    },
    {
        "label": "AddProductToWishListView",
        "kind": 6,
        "importPath": "wishlist.views",
        "description": "wishlist.views",
        "peekOfCode": "class AddProductToWishListView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        wish_list = WishList.objects.filter(user_id=request.user.id)\n        product = Product.objects.filter(id=request.data['product_id'])\n        if not product.exists():\n            return Response({\"type\": \"error\", \"message\": \"Product doesn't exist\"})\n        product = product.get()\n        if wish_list.exists():",
        "detail": "wishlist.views",
        "documentation": {}
    },
    {
        "label": "DeleteProductFromWishList",
        "kind": 6,
        "importPath": "wishlist.views",
        "description": "wishlist.views",
        "peekOfCode": "class DeleteProductFromWishList(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def post(self, request):\n        wish_list = WishList.objects.filter(user_id=request.user.id)\n        product = Product.objects.filter(id=request.data['product_id'])\n        if not product.exists():\n            return Response({\"type\": \"error\", \"message\": \"Product doesn't exist\"})\n        product = product.get()\n        if wish_list.exists():",
        "detail": "wishlist.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "wishlist.views",
        "description": "wishlist.views",
        "peekOfCode": "def index(request):\n    now = datetime.now()\n    html = f'''\n    <html>\n        <body>\n            <h1>Hello from API!</h1>\n            <p>The current time is { now }.</p>\n        </body>\n    </html>\n    '''",
        "detail": "wishlist.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    MakeEnvVariables().run()\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "MakeEnvVariables",
        "kind": 6,
        "importPath": "myUtils",
        "description": "myUtils",
        "peekOfCode": "class MakeEnvVariables:\n    def __init__(self, path='.env'):\n        self.env_file = open(path,'r').read().split('\\n')\n        self.variables = {}\n        self.default_keys = ['ENV', 'SECRET_NAME']\n        self.is_on_dev = None\n    def read_env_file(self):\n        for var in self.env_file:\n            splitted_var = var.replace(\"'\",\"\").split('=') \n            if splitted_var != ['']:",
        "detail": "myUtils",
        "documentation": {}
    }
]